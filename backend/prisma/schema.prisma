// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       Int        @id @default(autoincrement())
  username String     @unique
  password String
  rol      String
  candidato Candidato?
}

model Candidato {
  id               Int                   @id @default(autoincrement())
  nombre           String
  apellido         String
  email            String                @unique
  telefono         String
  fechaNacimiento  DateTime
  cv               String                @db.Text
  usuario          Usuario               @relation(fields: [usuarioId], references: [id])
  usuarioId        Int                   @unique
  experiencias     ExperienciaLaboral[]
  educacion        Educacion[]
  skills           Skill[]
}

model ExperienciaLaboral {
  id          Int       @id @default(autoincrement())
  empresa     String
  puesto      String
  fechaInicio DateTime
  fechaFin    DateTime?
  descripcion String
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  candidatoId Int
}

model Educacion {
  id          Int       @id @default(autoincrement())
  institucion String
  titulo      String
  fechaInicio DateTime
  fechaFin    DateTime?
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  candidatoId Int
}

model Skill {
  id          Int       @id @default(autoincrement())
  nombre      String
  nivel       Int
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  candidatoId Int
}